# [해결 못함 - 다시 풀어보기]

# N개의 동전이 있을 때 이 동전을 이용해서 만들 수 없는 양의 정수 중 최솟값 구하기
# 예를 들어, 3,2,1,1,9원이 있을 때 최솟값은 8이다
# 아이디어: 화폐를 오름차순으로 정렬한 후 앞에서 부터 하나씩 동전 개수를 늘려가며 만들 수 있는 금액 생성

# 1,1,2,3,9
# > 첫번째 동전만 사용해서 만들 수 있는 금액은 1원
# > 두번째 동전까지 사용해서 만들 수 있는 금액은 첫번째 금액 경우에 +1 한 것들 = 1,2원
# > 세번째 동전까지의 경우, 두번째까지 만들 수있는 금액 경우에 +2 한 것 까지 = 1, 2, 3, 4원
# > 네번째 ... +3 = 1,2,3,4,5,6,7원
# > 다섯번째 ...+9  = 1,2,3,4,5,6,7, 9,10, ... 16
# 즉, 현재 동전의 크기가 이전 동전으로 만들 수 있는 최대 액수+1를 넘어버리면 공백이 생김

# ========================

n = int(input())
data = list(map(int, input().split()))
data.sort()

target = 1
for x in data:
    # 만들 수 없는 금액을 찾았을 때 반복 종료
    if target < x:
        break
    target += x

# 만들 수 없는 금액 출력
print(target)
