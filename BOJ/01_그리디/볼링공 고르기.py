# 볼링공이 N개가 있고, M(1~10)개의 무게 종류가 있다고 하자
# 이때 A, B가 서로 다른 무게의 볼링공을 선택하는 경우의 수를 구하자
# 아이디어: A가 먼저 선택하고 B가 나머지 중 고른다
# A가 1번 무게의 공을 고르면 B는 2~10번 무게의 공 중에 하나를 선택한다
# A가 1번을 골랐을 때 + 2번을 골랐을 때 +... + 10번을 골랐을 때를 모두 더해주자
# 예를 들어 M = 7이고 각 무게의 공의 개수가 [a,b,c,d,e,f,g] 이렇다면,
# A가 1번을 골랐을 때의 수 = a * (b+c+d+e+f+g) = a * (모든 공의 개수 - a)

#=====================

n, m = map(int, input().split())
data = list(map(int, input().split()))

# 1부터 10까지의 무게를 담을 수 있는 리스트
array = [0] * 11

for x in data:
    # 각 무게에 해당하는 볼링공의 개수 카운트
    array[x] += 1

result = 0
# 1부터 m까지의 각 무게에 대하여 처리
for i in range(1, m + 1):
    n -= array[i] # 무게가 i인 볼링공의 개수(A가 선택할 수 있는 개수) 제외
    result += array[i] * n # B가 선택하는 경우의 수와 곱해주기

print(result)
